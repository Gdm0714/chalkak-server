name: Deploy to EC2

on:
  push:
    branches: [ main, master ]  # main 또는 master 브랜치에 push 시
  workflow_dispatch:  # 수동 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build -x test

    - name: Get artifact name
      id: artifact
      run: |
        ARTIFACT=$(ls build/libs/*.jar | grep -v plain)
        echo "path=$ARTIFACT" >> $GITHUB_OUTPUT
        echo "name=$(basename $ARTIFACT)" >> $GITHUB_OUTPUT

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "배포 시작..."

        # SSH 키 설정
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

        # JAR 파일 전송
        echo "JAR 파일 전송 중..."
        scp -i private_key.pem -o StrictHostKeyChecking=no \
          ${{ steps.artifact.outputs.path }} \
          $USER@$HOST:/opt/chalkak/chalkak-server.jar.new

        # 배포 스크립트 실행
        echo "배포 스크립트 실행 중..."
        ssh -i private_key.pem -o StrictHostKeyChecking=no \
          $USER@$HOST << 'EOF'
          /opt/chalkak/deploy.sh
        EOF

        echo "배포 완료!"

    - name: Cleanup
      if: always()
      run: rm -f private_key.pem

    - name: Notify success
      if: success()
      run: echo "✅ 배포 성공!"

    - name: Notify failure
      if: failure()
      run: echo "❌ 배포 실패!"
